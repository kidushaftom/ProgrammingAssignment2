source(pathtofile("plot1.R"),local=TRUE)
type myedit("plot2.R")
myedit("plot2.R")
type myedit("plot2.R")
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
myedit("plot2.R")
str(diamonds)
myedit("plot2.R")
table(diamods$color)
table(diamonds$color)
table(diamods$color)
table(diamods$color)
table(diamonds$color,diamonds$cut)
table(diamods$color)
table(diamods$color)
table(diamonds$color,diamonds$cut)
myedit("myLabels.R")
pathtofile("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
pathtofile("myLabels.R")
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
pathtofile("myLabels.R")
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
pathtofile("myLabels.R")
str(mpg)
pathtofile("myLabels.R")
qplot(displ, hwy, data = mpg)
pathtofile("myLabels.R")
qplot(displ, hwy, data = mpg, color = drv)
pathtofile("myLabels.R")
qplot(displ, hwy, data = mpg, color=drv, geom = c("point", "smooth"))
pathtofile("myLabels.R")
qplot(y=hwy, data = mpg, color = drv)
pathtofile("myLabels.R")
myhight
myhigh
myhight
pathtofile("myLabels.R")
qplot(drv,hwy,data=mpg,geom="boxplot")
pathtofile("myLabels.R")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
sample(colors(),10)
c("red","blue")
colorRamp(c("red","blue"))
pal <- colorRamp(c("red","blue"))
colorRamp(c("red","blue"))
colorRamp(c("red","blue"))
pal(0)
pal()
palette[[1L]](x)
pal(1)
seq(0,1,len=6)
pal(seq(0,1,len=6))
pal(1)
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(2)
p1(6)
p1(2)
0xcC or 0xcc or 0xCC or 0xCc
0xcC
p1(2)
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(2)
p2(10)
p1(20)
showMe(p1(20))
p1(20)
showMe(p2(20))
what p2(2)
p2(2)
howMe(p2(2)))
showMe(p2(2)))
showMe(p2(2))
p1
p1
?rgb
p1
p3 <- colorRampPalette(c("blue","green"),alpha=.5)
p3(5)
p3 <- colorRampPalette(c("blue","green"),alpha=.5)
plot(x,y,pch=19,col=rgb(0,.5,.5))
p3 <- colorRampPalette(c("blue","green"),alpha=.5)
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
p3 <- colorRampPalette(c("blue","green"),alpha=.5)
cols <- brewer.pal(3, "BuGn")
showMe
showMe(cols)
showMe
pal <- colorRampPalette(cols)
pal(20)
showMe(pal(20))
pal(20)
image(volcano, col = pal(20))
showMe(pal(20))
image(volcano, col = p1(20))
showMe(pal(20))
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
showMe(pal(20))
g <- ggplot(mpg, aes(displ,hwy) )
summary(g)
g+geom_point()
g+geom_point()+ geom_smooth()
g+geom_point()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)
g+geom_point()
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)+ ggtitle("Swirl Rules!")
g+geom_point()
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point()
g + geom_point(aes(color = drv), size = 4, alpha = 1/2)
g+geom_point()
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy
| Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy,Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy,Mileage)
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy,Mileag))
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy,Mileag))
fa
sdafa
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy,Mileag)))
g+geom_point()
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g+geom_point()
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv)) + theme_bw(base_family="Times")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
plot(myx, myy, type = "l", ylim = c(-3,3))
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g <- ggplot(testdat, aes(x = myx, y = myy)
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line()
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line() + ylim(-3,3)
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line() + coord_cartesian(ylim=c(-3,3))
g <- ggplot(testdat, aes(x = myx, y = myy))
g <- ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_point()
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_point() +
| facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway
| Mileage",title="Swirl Rules!")
g + geom_point() +
| facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway
| Mileage",title="Swirl Rules!")
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage,title="Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage,title="Swirl Rules!"))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage,title="Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
g <- ggplot(mpg, aes(displ,hwy) )
g <- ggplot(mpg, aes(displ,hwy) )
summary(g)
summary(g)
g+geom_point()
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)+ ggtitle("Swirl Rules!")
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)+ ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(color="pink",size=4,alpha=1/2)
g + geom_point(aes(color = drv), size = 4, alpha = 1/2)
g + geom_point(aes(color = drv), size = 4, alpha = 1/2)
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family="Times")
g + geom_point(aes(color = drv)) + theme_bw(base_family="Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdat, aes(x = myx, y = myy))
g
g + geom_line()
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim=c(-3,3))
g + geom_line() + coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g <- ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g + geom_point()
g <- ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price,data=diamonds)
str(diamonds)
str(diamonds)
range(diamonds$price)
str(diamonds)
qplot(price,data=diamonds,binwidth=18497/30)
str(diamonds)
brk
str(diamonds)
counts
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
counts
qplot(price,data=diamonds,geom="density")
counts
qplot(price,data=diamonds,geom="density",color=cut)
counts
qplot(carat,price,data=diamonds)
counts
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds, shape=cut)
qplot(carat,price,data=diamonds, shape=cut)
qplot(carat,price,data=diamonds, color=cut)
qplot(carat,price,data=diamonds, shape=cut)
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut, facets=.~cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut, facets=.~cut) + geom_smooth(method="lm")
g <- ggplot(diamonds,aes(depth,price))
summar(g)
summary(g)
summary(g)
g+geom_point(alpha=1/3)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
cutpoints
iamonds$car2 <- cut(diamonds$carat,cutpoints)
diamonds$car2 <- cut(diamonds$carat,cutpoints)
diamonds$car2 <- cut(diamonds$carat,cutpoints)
g <- ggplot(diamonds,aes(depth,price))
g <- ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds$car2 <- cut(diamonds$carat,cutpoints)
diamonds[myd,]
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
diamonds[myd,]
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
swirl()
2
q()
swirl()
swirl()
library("swirl", lib.loc="~/R/win-library/3.4")
swirl()
dim(ssd)
ssd[,c(562,563)]
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject)))
sum(table(ssd$subject))
ssd$activity
table(ssd$activity)
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1)
mymain <- "Diamonds are Sparkly!"
names(sub1[1:12])
names(sub1[1:12])
myedit("showXY.R")
showMe
showMe(1:6)
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclus(mdist)
hclust(mdist)
hclustering <- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
sub1[maxCon]
sub1[maxCon]
names(sub1[maxCon])
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
dim(kClust$centers)
laying <- which(kClust$size==29)
laying <- which(kClust$size==29)
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
2
q()
swirl()
library("swirl", lib.loc="~/R/win-library/3.4")
swirl()
library("swirl", lib.loc="~/R/win-library/3.4")
dim(pm0)
dim(pm0)
head(pm0)
head(pm0)
print(cnames)
print(cnames)
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
strsplit(cnames, "|", fixed = TRUE)
strsplit(cnames, "|", fixed = TRUE)
strsplit(cnames, "|", fixed = TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
strsplit(cnames, "|", fixed = TRUE)
cnames
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
head(pm0)
head(pm0)
x0 <- pm0$Sample.Value
x0 <- pm0$Sample.Value
str(x0)
str(x0)
mean(is.na(x0))
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
dim(pm1)
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
mean(is.na(x1))
mean(is.na(x1))
summary(x0)
summary(x0)
summary(x1)
summary(x0)
boxplot(x0, x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
boxplot(log10(x0), log10(x1))
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
negative <- x1 < 0
sum(negative, na.rm = TRUE)
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
dates <- pm1$Date
str(dates)
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
head(dates)
hist(dates[negative],"month")
hist(dates[negative],"month")
str(site0)
str(site0)
both <- intersect(site0, site1)
str(site0)
print(both)
print(both)
head(pm0)
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x1sub <- pm1sub$Sample.Value
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
plot(dates0, x0sub, pch = 20)
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
plot(dates1, x1sub, pch = 20)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng <- range(x0sub,x1sub,na.rm=TRUE)
print(rng)
rng <- range(x0sub,x1sub,na.rm=TRUE)
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
str(mn1)
str(mn0)
summary(mn0)
str(mn0)
summary(mn1)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
summary(mn1)
d1 <- data.frame(state = names(mn1), mean = mn1)
summary(mn1)
mrg <- merge(d0, d1, by = "state")
summary(mn1)
dim(mrg)
summary(mn1)
head(mrg)
summary(mn1)
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5))) at the command prompt.
head(mrg)
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
head(mrg)
with(mrg, points(rep(2, 52), mrg[, 3])
head(mrg)
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
mrg[mrg$mean.x < mrg$mean.y,]
swirl()
install_from_swirl("Reression Model")
library("swirl", lib.loc="~/R/win-library/3.4")
install_from_swirl("Reression Model")
install_from_swirl("Reression Models")
train<-read.csv("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv")
head(train)
head(train)
names(train)
head(train$classe)
head(train)
setwd("C:/Users/Haftom/Practical Machine Learning")
library("rpart", lib.loc="C:/Program Files/Microsoft/R Client/R_SERVER/library")
install.packages("tree")
install.packages("randomForest")
install.packages("e1071")
install.packages("gbm")
install.packages("caTools")
install.packages("caret")
setwd("C:/Users/Haftom/ProgrammingAssignment2")
View(result2)
setwd("C:/Users/Haftom/ProgrammingAssignment2")
list.files()
